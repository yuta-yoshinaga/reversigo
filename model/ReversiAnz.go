////////////////////////////////////////////////////////////////////////////////
///	@file			ReversiAnz.go
///	@brief			リバーシ解析クラス実装ファイル
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///	$Version:		$
///	$Revision:		$
///
/// (c) 2020 Yuta Yoshinaga.
///
/// - 本ソフトウェアの一部又は全てを無断で複写複製（コピー）することは、
///   著作権侵害にあたりますので、これを禁止します。
/// - 本製品の使用に起因する侵害または特許権その他権利の侵害に関しては
///   当方は一切その責任を負いません。
///
////////////////////////////////////////////////////////////////////////////////
package model

////////////////////////////////////////////////////////////////////////////////
///	@class		ReversiAnz
///	@brief		リバーシ解析クラス
///
////////////////////////////////////////////////////////////////////////////////
type ReversiAnz struct {
	min                 int     //!< 最小値
	max                 int     //!< 最大値
	avg                 float64 //!< 平均
	pointCnt            int     //!< 置けるポイント数
	edgeCnt             int     //!< 角を取れるポイント数
	edgeSideOneCnt      int     //!< 角一つ前を取れるポイント数
	edgeSideTwoCnt      int     //!< 角二つ前を取れるポイント数
	edgeSideThreeCnt    int     //!< 角三つ前を取れるポイント数
	edgeSideOtherCnt    int     //!< それ以外を取れるポイント数
	ownMin              int     //!< 最小値
	ownMax              int     //!< 最大値
	ownAvg              float64 //!< 平均
	ownPointCnt         int     //!< 置けるポイント数
	ownEdgeCnt          int     //!< 角を取れるポイント数
	ownEdgeSideOneCnt   int     //!< 角一つ前を取れるポイント数
	ownEdgeSideTwoCnt   int     //!< 角二つ前を取れるポイント数
	ownEdgeSideThreeCnt int     //!< 角三つ前を取れるポイント数
	ownEdgeSideOtherCnt int     //!< それ以外を取れるポイント数
	badPoint            int     //!< 悪手ポイント
	goodPoint           int     //!< 良手ポイント
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			コンストラクタ
///	@fn				NewReversiAnz() *ReversiAnz
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func NewReversiAnz() *ReversiAnz {
	r := new(ReversiAnz)
	r.Reset()
	return r
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetMin() int
///	@return			min int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetMin() int {
	return r.min
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetMin(min int)
///	@param[in]		min int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetMin(min int) {
	r.min = min
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetMax() int
///	@return			max int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetMax() int {
	return r.max
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetMax(max int)
///	@param[in]		max int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetMax(max int) {
	r.max = max
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetAvg() float64
///	@return			avg float64
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetAvg() float64 {
	return r.avg
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetAvg(avg float64)
///	@param[in]		avg float64
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetAvg(avg float64) {
	r.avg = avg
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetPointCnt() int
///	@return			pointCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetPointCnt() int {
	return r.pointCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetPointCnt(pointCnt int)
///	@param[in]		pointCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetPointCnt(pointCnt int) {
	r.pointCnt = pointCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetEdgeCnt() int
///	@return			edgeCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetEdgeCnt() int {
	return r.edgeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetEdgeCnt(edgeCnt int)
///	@param[in]		edgeCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetEdgeCnt(edgeCnt int) {
	r.edgeCnt = edgeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetEdgeSideOneCnt() int
///	@return			edgeSideOneCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetEdgeSideOneCnt() int {
	return r.edgeSideOneCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetEdgeSideOneCnt(edgeSideOneCnt int)
///	@param[in]		edgeSideOneCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetEdgeSideOneCnt(edgeSideOneCnt int) {
	r.edgeSideOneCnt = edgeSideOneCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetEdgeSideTwoCnt() int
///	@return			edgeSideTwoCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetEdgeSideTwoCnt() int {
	return r.edgeSideTwoCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetEdgeSideTwoCnt(edgeSideTwoCnt int)
///	@param[in]		edgeSideTwoCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetEdgeSideTwoCnt(edgeSideTwoCnt int) {
	r.edgeSideTwoCnt = edgeSideTwoCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetEdgeSideThreeCnt() int
///	@return			edgeSideThreeCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetEdgeSideThreeCnt() int {
	return r.edgeSideThreeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetEdgeSideThreeCnt(edgeSideThreeCnt int)
///	@param[in]		edgeSideThreeCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetEdgeSideThreeCnt(edgeSideThreeCnt int) {
	r.edgeSideThreeCnt = edgeSideThreeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetEdgeSideOtherCnt() int
///	@return			edgeSideOtherCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetEdgeSideOtherCnt() int {
	return r.edgeSideOtherCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetEdgeSideOtherCnt(edgeSideOtherCnt int)
///	@param[in]		edgeSideOtherCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetEdgeSideOtherCnt(edgeSideOtherCnt int) {
	r.edgeSideOtherCnt = edgeSideOtherCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnMin() int
///	@return			ownMin int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnMin() int {
	return r.ownMin
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnMin(ownMin int)
///	@param[in]		ownMin int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnMin(ownMin int) {
	r.ownMin = ownMin
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnMax() int
///	@return			ownMax int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnMax() int {
	return r.ownMax
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnMax(ownMax int)
///	@param[in]		ownMax int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnMax(ownMax int) {
	r.ownMax = ownMax
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnAvg() float64
///	@return			ownAvg float64
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnAvg() float64 {
	return r.ownAvg
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnAvg(ownAvg float64)
///	@param[in]		ownAvg float64
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnAvg(ownAvg float64) {
	r.ownAvg = ownAvg
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnPointCnt() int
///	@return			ownPointCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnPointCnt() int {
	return r.ownPointCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnPointCnt(ownPointCnt int)
///	@param[in]		ownPointCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnPointCnt(ownPointCnt int) {
	r.ownPointCnt = ownPointCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnEdgeCnt() int
///	@return			ownEdgeCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnEdgeCnt() int {
	return r.ownEdgeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnEdgeCnt(ownEdgeCnt int)
///	@param[in]		ownEdgeCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnEdgeCnt(ownEdgeCnt int) {
	r.ownEdgeCnt = ownEdgeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnEdgeSideOneCnt() int
///	@return			ownEdgeSideOneCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnEdgeSideOneCnt() int {
	return r.ownEdgeSideOneCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnEdgeSideOneCnt(ownEdgeSideOneCnt int)
///	@param[in]		ownEdgeSideOneCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnEdgeSideOneCnt(ownEdgeSideOneCnt int) {
	r.ownEdgeSideOneCnt = ownEdgeSideOneCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnEdgeSideTwoCnt() int
///	@return			ownEdgeSideTwoCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnEdgeSideTwoCnt() int {
	return r.ownEdgeSideTwoCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnEdgeSideTwoCnt(ownEdgeSideTwoCnt int)
///	@param[in]		ownEdgeSideTwoCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnEdgeSideTwoCnt(ownEdgeSideTwoCnt int) {
	r.ownEdgeSideTwoCnt = ownEdgeSideTwoCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnEdgeSideThreeCnt() int
///	@return			ownEdgeSideThreeCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnEdgeSideThreeCnt() int {
	return r.ownEdgeSideThreeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnEdgeSideThreeCnt(ownEdgeSideThreeCnt int)
///	@param[in]		ownEdgeSideThreeCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnEdgeSideThreeCnt(ownEdgeSideThreeCnt int) {
	r.ownEdgeSideThreeCnt = ownEdgeSideThreeCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetOwnEdgeSideOtherCnt() int
///	@return			ownEdgeSideOtherCnt int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetOwnEdgeSideOtherCnt() int {
	return r.ownEdgeSideOtherCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetOwnEdgeSideOtherCnt(ownEdgeSideOtherCnt int)
///	@param[in]		ownEdgeSideOtherCnt int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetOwnEdgeSideOtherCnt(ownEdgeSideOtherCnt int) {
	r.ownEdgeSideOtherCnt = ownEdgeSideOtherCnt
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetBadPoint() int
///	@return			badPoint int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetBadPoint() int {
	return r.badPoint
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetBadPoint(badPoint int)
///	@param[in]		badPoint int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetBadPoint(badPoint int) {
	r.badPoint = badPoint
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetGoodPoint() int
///	@return			goodPoint int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiAnz) GetGoodPoint() int {
	return r.goodPoint
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetGoodPoint(goodPoint int)
///	@param[in]		goodPoint int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) SetGoodPoint(goodPoint int) {
	r.goodPoint = goodPoint
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			リセット
///	@fn				Reset()
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiAnz) Reset() {
	r.min = 0
	r.max = 0
	r.avg = 0.0
	r.pointCnt = 0
	r.edgeCnt = 0
	r.edgeSideOneCnt = 0
	r.edgeSideTwoCnt = 0
	r.edgeSideThreeCnt = 0
	r.edgeSideOtherCnt = 0
	r.ownMin = 0
	r.ownMax = 0
	r.ownAvg = 0.0
	r.ownPointCnt = 0
	r.ownEdgeCnt = 0
	r.ownEdgeSideOneCnt = 0
	r.ownEdgeSideTwoCnt = 0
	r.ownEdgeSideThreeCnt = 0
	r.ownEdgeSideOtherCnt = 0
	r.badPoint = 0
	r.goodPoint = 0
}
