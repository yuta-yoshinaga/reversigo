////////////////////////////////////////////////////////////////////////////////
///	@file			ReversiHistory.go
///	@brief			リバーシ履歴クラス実装ファイル
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///	$Version:		$
///	$Revision:		$
///
/// (c) 2020 Yuta Yoshinaga.
///
/// - 本ソフトウェアの一部又は全てを無断で複写複製（コピー）することは、
///   著作権侵害にあたりますので、これを禁止します。
/// - 本製品の使用に起因する侵害または特許権その他権利の侵害に関しては
///   当方は一切その責任を負いません。
///
////////////////////////////////////////////////////////////////////////////////
// Package model リバーシに関する構造体をまとめるパッケージ。
package model

////////////////////////////////////////////////////////////////////////////////
///	@class		ReversiHistory
///	@brief		リバーシ履歴クラス
///
////////////////////////////////////////////////////////////////////////////////
type ReversiHistory struct {
	Point *ReversiPoint //!< リバーシポイント
	Color int           //!< カラー
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			コンストラクタ
///	@fn				NewReversiHistory() *ReversiHistory {
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func NewReversiHistory() *ReversiHistory {
	r := new(ReversiHistory)
	r.Point = NewReversiPoint()
	r.Reset()
	return r
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetPoint() ReversiPoint
///	@return			point ReversiPoint
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiHistory) GetPoint() *ReversiPoint {
	return r.Point
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetPoint(point *ReversiPoint)
///	@param[in]		point *ReversiPoint
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiHistory) SetPoint(point *ReversiPoint) {
	r.Point = point
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			ゲッター
///	@fn				GetColor() int
///	@return			color int
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r ReversiHistory) GetColor() int {
	return r.Color
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			セッター
///	@fn				SetColor(color int)
///	@param[in]		color int
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiHistory) SetColor(color int) {
	r.Color = color
}

////////////////////////////////////////////////////////////////////////////////
///	@brief			リセット
///	@fn				Reset()
///	@return			ありません
///	@author			Yuta Yoshinaga
///	@date			2020.07.06
///
////////////////////////////////////////////////////////////////////////////////
func (r *ReversiHistory) Reset() {
	r.Point.SetX(-1)
	r.Point.SetY(-1)
	r.Color = -1
}
